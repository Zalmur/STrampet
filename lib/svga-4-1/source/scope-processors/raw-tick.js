// Generated by CoffeeScript 2.7.0
(function() {
  // scope.rawTick
  // An every-frame update function that can be turned on and off by the content creator.
  // The frame rate is uncapped, and will run at the native refresh rate in supporting browsers.
  Take(["Registry", "Tick"], function(Registry, Tick) {
    var speed;
    speed = 1;
    return Registry.add("ScopeProcessor", function(scope) {
      var accTime, rawTick, running, step;
      if (scope.rawTick == null) {
        return;
      }
      running = true;
      accTime = 0;
      step = 0;
      // Replace the actual scope rawTick function with a warning
      rawTick = scope.rawTick;
      scope.rawTick = function() {
        throw new Error("@rawTick() is called by the system. Please don't call it yourself.");
      };
      scope.rawTick.start = function() {
        return running = true;
      };
      scope.rawTick.stop = function() {
        return running = false;
      };
      scope.rawTick.toggle = function() {
        if (running) {
          return scope.rawTick.stop();
        } else {
          return scope.rawTick.start();
        }
      };
      scope.rawTick.restart = function() {
        return accTime = 0;
      };
      scope.rawTick.speed = function(s) {
        if (s != null) {
          speed = s;
        }
        return speed;
      };
      scope.rawTick.step = function() {
        accTime += step;
        return rawTick.call(scope, accTime, step);
      };
      // Store a secret copy of the real rawTick function, so that warmup can use it
      scope._rawTick = function(time, dt) {
        if (!running) {
          return;
        }
        step = dt * speed;
        return scope.rawTick.step();
      };
      return Tick(scope._rawTick);
    });
  });

}).call(this);
