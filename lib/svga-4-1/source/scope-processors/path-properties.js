// Generated by CoffeeScript 2.7.0
(function() {
  Take(["Registry", "ScopeCheck", "SVG"], function(Registry, ScopeCheck, SVG) {
    return Registry.add("ScopeProcessor", function(scope) {
      var childPaths, props;
      props = ["fill", "stroke", "strokeLinecap", "strokeLinejoin", "strokeWidth"];
      childPaths = scope.element.querySelectorAll("path");
      return props.forEach(function(prop) {
        var childPropsCleared, value;
        ScopeCheck(scope, prop);
        value = null;
        childPropsCleared = false;
        return Object.defineProperty(scope, prop, {
          get: function() {
            return value;
          },
          set: function(v) {
            var childPath, i, len, results;
            if (value !== v) {
              SVG.attr(scope.element, prop, value = v);
              if (!childPropsCleared) {
                childPropsCleared = true;
                results = [];
                for (i = 0, len = childPaths.length; i < len; i++) {
                  childPath = childPaths[i];
                  results.push(SVG.attr(childPath, prop, null));
                }
                return results;
              }
            }
          }
        });
      });
    });
  });

}).call(this);
