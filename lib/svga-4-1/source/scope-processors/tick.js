// Generated by CoffeeScript 2.7.0
(function() {
  // scope.tick
  // An every-frame update function that can be turned on and off by the content creator.
  // The frame rate is capped to 60 Hz but otherwise approximates display refresh rate.
  Take(["Registry", "Tick"], function(Registry, Tick) {
    var speed;
    speed = 1;
    return Registry.add("ScopeProcessor", function(scope) {
      var acc, count, running, step, tick;
      if (scope.tick == null) {
        return;
      }
      running = true;
      acc = 0;
      count = 0;
      step = 1 / 60;
      // Replace the actual scope tick function with a warning
      tick = scope.tick;
      scope.tick = function() {
        throw new Error("@tick() is called by the system. Please don't call it yourself.");
      };
      scope.tick.start = function() {
        return running = true;
      };
      scope.tick.stop = function() {
        return running = false;
      };
      scope.tick.toggle = function() {
        if (running) {
          return scope.tick.stop();
        } else {
          return scope.tick.start();
        }
      };
      scope.tick.restart = function() {
        acc = 0;
        return count = 0;
      };
      scope.tick.speed = function(s) {
        if (s != null) {
          speed = s;
        }
        return speed;
      };
      scope.tick.step = function() {
        count++;
        return tick.call(scope, count * step, step);
      };
      // Store a secret copy of the real tick function, so that warmup can use it
      scope._tick = function(time, dt) {
        var results;
        if (!running) {
          return;
        }
        acc += dt * speed;
        results = [];
        while (acc > step && running) {
          acc -= step;
          results.push(scope.tick.step());
        }
        return results;
      };
      return Tick(scope._tick);
    });
  });

}).call(this);
