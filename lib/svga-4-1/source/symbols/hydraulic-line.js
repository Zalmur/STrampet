// Generated by CoffeeScript 2.7.0
(function() {
  Take(["Pressure", "SVG", "Symbol", "Voltage"], function(Pressure, SVG, Symbol, Voltage) {
    return Symbol("HydraulicLine", [], function(element) {
      var applyColor, fillElms, highlightActive, scope, strip, strokeElms;
      strokeElms = [];
      fillElms = [];
      highlightActive = false;
      strip = function(elm) {
        var child, i, len, ref;
        if ((typeof elm.hasAttribute === "function" ? elm.hasAttribute("fill") : void 0) && elm.getAttribute("fill") !== "none") {
          if (elm !== element) {
            fillElms.push(elm);
          }
          elm.removeAttribute("fill");
        }
        if ((typeof elm.hasAttribute === "function" ? elm.hasAttribute("stroke") : void 0) && elm.getAttribute("stroke") !== "none") {
          if (elm !== element) {
            strokeElms.push(elm);
          }
          elm.removeAttribute("stroke");
        }
        if (elm.childNodes.length) {
          ref = elm.childNodes;
          for (i = 0, len = ref.length; i < len; i++) {
            child = ref[i];
            strip(child);
          }
        }
        return void 0;
      };
      strip(element);
      element.setAttribute("fill", "transparent");
      applyColor = function(stroke, fill = stroke) {
        var elm, i, j, len, len1;
        for (i = 0, len = strokeElms.length; i < len; i++) {
          elm = strokeElms[i];
          SVG.attr(elm, "stroke", stroke);
        }
        for (j = 0, len1 = fillElms.length; j < len1; j++) {
          elm = fillElms[j];
          SVG.attr(elm, "fill", fill);
        }
        return void 0;
      };
      return scope = {
        _highlight: function(enable) {
          if (highlightActive = enable) {
            return applyColor("url(#MidHighlightGradient)", "url(#LightHighlightGradient)");
          } else if (scope.voltage != null) {
            return applyColor(Voltage(scope.voltage));
          } else {
            return applyColor(Pressure(scope.pressure));
          }
        },
        _setColor: function(p) {
          if (highlightActive) {

          // Do nothing
          } else if (scope.voltage != null) {
            return applyColor(Voltage(p));
          } else {
            return applyColor(Pressure(p));
          }
        },
        setup: function() {
          var ref;
          this.pressure = 0;
          // If there's a dashed child of this HydraulicLine, turn it into a pilot line
          return (ref = this.dashed) != null ? ref.dash.pilot() : void 0;
        }
      };
    });
  });

}).call(this);
