// Generated by CoffeeScript 2.7.0
(function() {
  // RAF is used for 1-time requestAnimationFrame callbacks.
  // For every-frame requestAnimationFrame callbacks, use system/tick.coffee
  (function() {
    var aboutToRun, allReady, attemptToRun, callbacksByPriority, run, runRequested;
    allReady = false;
    runRequested = false;
    aboutToRun = false;
    callbacksByPriority = [[], []]; // Assume 2 priorities will be used in most cases
    run = function(time) {
      var callbacks, cb, i, j, len, len1, priority;
      aboutToRun = false;
      for (priority = i = 0, len = callbacksByPriority.length; i < len; priority = ++i) {
        callbacks = callbacksByPriority[priority];
        if (!(callbacks != null)) {
          continue;
        }
        callbacksByPriority[priority] = [];
        for (j = 0, len1 = callbacks.length; j < len1; j++) {
          cb = callbacks[j];
          cb(time);
        }
      }
      return void 0;
    };
    attemptToRun = function() {
      if (allReady && runRequested) {
        if (!aboutToRun) {
          aboutToRun = true;
          return requestAnimationFrame(run);
        }
      }
    };
    Take("AllReady", function() {
      allReady = true;
      return attemptToRun();
    });
    return Make("RAF", function(cb, ignoreDuplicates = false, priority = 0) {
      var c, i, len, ref;
      if (cb == null) {
        throw new Error("RAF(null)");
      }
      ref = callbacksByPriority[priority];
      for (i = 0, len = ref.length; i < len; i++) {
        c = ref[i];
        if (!(c === cb)) {
          continue;
        }
        if (ignoreDuplicates) {
          return;
        }
        console.log(cb);
        throw new Error("^ RAF was called more than once with this function. You can use RAF(fn, true) to drop duplicates and bypass this error.");
      }
      (callbacksByPriority[priority] != null ? callbacksByPriority[priority] : callbacksByPriority[priority] = []).push(cb);
      runRequested = true;
      attemptToRun();
      return cb; // Composable
    });
  })();

}).call(this);
